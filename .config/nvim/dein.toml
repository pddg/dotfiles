[[plugins]]
repo = 'Shougo/vimproc.vim'
hook_post_update = '''
    if dein#util#_is_windows()
        let cmd = 'tools\\update-dll-mingw'
    elseif dein#util#_is_cygwin()
        let cmd = 'make -f make_cygwin.mak'
    elseif executable('gmake')
        let cmd = 'gmake'
    else
        let cmd = 'make'
    endif
  let g:dein#plugin.build = cmd
'''

[[plugins]]
repo = 'jacoborus/tender.vim'

[[plugins]]
repo = 'majutsushi/tagbar'

[[plugins]]
repo = 'vim-airline/vim-airline'
depends = ['vim-airline-themes']
hook_add = '''   
    set laststatus=2
    let g:airline_theme = 'deus'
    if has("mac")
        let g:airline_powerline_fonts = 1
    endif
    let g:airline#extensions#tabline#enabled = 1
    let g:airline#extensions#tabline#buffer_idx_mode = 1
    let g:airline#extensions#virtualenv#enabled = 1
    let g:airline#extensions#whitespace#mixed_indent_algo = 1 	
''' 
[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'prabirshrestha/async.vim'

[[plugins]]
repo = 'prabirshrestha/vim-lsp'

[[plugins]]
repo = 'mattn/vim-goimports'

[[plugins]]
repo = 'mattn/vim-lsp-settings'

[[plugins]]
repo = 'mattn/sonictemplate-vim'
hook_add = """
    let g:sonictemplate_vim_template_dir = ['$HOME/.config/nvim/templates']
"""

[[plugins]]
repo = 'vim-denops/denops.vim'

[[plugins]]
repo = 'Shougo/ddu-ui-filer'

[[plugins]]
repo = 'Shougo/ddu-ui-ff'

[[plugins]]
repo = 'Shougo/ddu-source-file'

[[plugins]]
repo = 'Shougo/ddu-source-file_rec'

[[plugins]]
repo = 'Shougo/ddu-column-filename'

[[plugins]]
repo = 'ryota2357/ddu-column-icon_filename'

[[plugins]]
repo = 'Shougo/ddu-kind-file'

[[plugins]]
repo = 'Shougo/ddu-filter-matcher_substring'

[[plugins]]
repo = 'Shougo/ddu.vim'
hook_add = '''
    call ddu#custom#patch_global({
        \   'ui': 'filer',
        \   'uiOptions': {
        \     '_': {
        \       'toggle': v:true,
        \     },
        \   },
        \   'uiParams': {
        \     'filer': {
        \       'splitDirection': 'topleft',
        \       'split': 'vertical',
        \       'winWidth': '25',
        \     },
        \     'ff': {
        \       'startFilter': v:true,
        \       'prompt': '> ',
        \       'previewVertical': v:true,
        \       'previewCol': 1,
        \       'previewWidth': 120,
        \     },
        \   },
        \   'sources': [{'name': 'file', 'params': {}}],
        \   'sourceOptions': {
        \     '_': {
        \       'matchers': ['matcher_substring'],
        \     },
        \   },
        \   'kindOptions': {
        \     'file': {
        \       'defaultAction': 'open',
        \     },
        \   },
        \ })

    nnoremap <silent>fi :<C-u>call ddu#start({
        \   'ui': 'filer',
        \   'sourceOptions': {
        \     'file': {
        \       'columns': ['icon_filename'],
        \     },
        \   },
        \ })<CR>
    nnoremap <silent>fl :<C-u>call ddu#start({
        \   'ui': 'ff', 
        \   'resume': v:true,
        \   'sources': [{'name': 'file_rec', 'params': {}}],
        \   'sourceOptions': {
        \     'file': {
        \       'columns': ['filename'],
        \     },
        \   },
        \ })<CR>

    autocmd FileType ddu-ff call s:ddu_ff_settings()
    function! s:ddu_ff_settings() abort
        nnoremap <buffer><silent> <CR>
            \ <Cmd>call ddu#ui#ff#do_action('itemAction')<CR>
        nnoremap <buffer><silent> i
            \ <Cmd>call ddu#ui#ff#do_action('openFilterWindow')<CR>
        nnoremap <buffer><silent> q
            \ <Cmd>call ddu#ui#ff#do_action('quit')<CR>
        nnoremap <buffer><silent> p
            \ <Cmd>call ddu#ui#ff#do_action('preview')<CR>
    endfunction

    autocmd FileType ddu-ff-filter call s:ddu_ff_filter_settings()
    function! s:ddu_ff_filter_settings() abort
        inoremap <buffer><silent> <CR>
            \ <Esc><C-w>k
        nnoremap <buffer><silent> <CR>
            \ <Cmd>close<CR>
        nnoremap <buffer><silent> q
            \ <Cmd>close<CR>
    endfunction

    autocmd FileType ddu-filer call s:ddu_filer_settings()
    function! s:ddu_filer_settings() abort
        " Enterでディレクトリ移動 or ファイルを開く
        nnoremap <buffer><silent><expr> <CR>
            \ ddu#ui#filer#is_tree() ?
            \ "<Cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'narrow'})<CR>" :
            \ "<Cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'open'})<CR>"
        " Spaceで選択アイテムをトグル
        nnoremap <buffer><silent> <Space>
            \ <Cmd>call ddu#ui#filer#do_action('toggleSelectItem')<CR>
        " oでその場でディレクトリを展開
        nnoremap <buffer> o
            \ <Cmd>call ddu#ui#filer#do_action('expandItem', {'mode': 'toggle'})<CR>
        " qで終了
        nnoremap <buffer><silent> q
            \ <Cmd>call ddu#ui#filer#do_action('quit')<CR>
        " hでディレクトリを遡る
        nnoremap <buffer><silent> h
            \ <Cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'narrow', 'params': {'path': '..'}})<CR>
        " lでディレクトリに入る
        nnoremap <buffer><silent><expr> l
            \ ddu#ui#filer#is_tree() ?
            \ "<Cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'narrow'})<CR>" :
            \ "<Cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'open'})<CR>"
        " ファイル操作系
        nnoremap <buffer><silent> K \
            \ <Cmd>call ddu#ui#filer#do_action('newDirectory')<CR>
        nnoremap <buffer><silent> N \
            \ <Cmd>call ddu#ui#filer#do_action('newFile')<CR>
        nnoremap <buffer><silent> d \
            \ <Cmd>call ddu#ui#filer#do_action('delete')<CR>
        nnoremap <buffer><silent> r \
            \ <Cmd>call ddu#ui#filer#do_action('rename')<CR>
        nnoremap <buffer><silent> c \
            \ <Cmd>call ddu#ui#filer#do_action('copy')<CR>
        nnoremap <buffer><silent> p \
            \ <Cmd>call ddu#ui#filer#do_action('paste')<CR>
        nnoremap <buffer><silent> m \
            \ <Cmd>call ddu#ui#filer#do_action('move')<CR>
    endfunction
'''
